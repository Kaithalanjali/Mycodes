
//code 


#include <iostream>
#include <bits/stdc++.h>
using namespace std;
//minimum path sum;
#define pii pair<int,int>
int main() {
    vector<vector<int>> vis = {{0,0,0},{0,0,0},{0,0,0}};
    vector<vector<int>> grid = {{1,3,1},{1,5,1},{4,2,1}};
    vector<vector<int>> dist(3,vector<int>(3, INT_MAX));
    dist[0][0]=grid[0][0];
    //vis[0][0]=1;
    priority_queue<pair<int,pii> , vector<pair<int,pii>>, greater<pair<int,pii>>> pq;
    pq.push({dist[0][0],{0,0}});
    while(!pq.empty()){
        int n = pq.size();
        int prevdist = pq.top().first;
        int prevx = pq.top().second.first;
        int prevy = pq.top().second.second;
        vis[prevx][prevy]=1;
        pq.pop();
        int dx[4] = {-1,1,0,0};
        int dy[4] = {0,0,-1,1};
        
        for(int d=0;d<4;d++){
            int x = prevx + dx[d];
            int y = prevy + dy[d];
            if(x>=0 && x<3 && y>=0 && y<3 && vis[x][y]==0){
                if(dist[x][y]>prevdist+grid[x][y]){
                    dist[x][y] = prevdist+grid[x][y];
                    vis[x][y]=1;
                    pq.push({dist[x][y],{x,y}});
                }
            }
        } 
    }
    for(int i=0;i<3;i++){
            for(int j=0;j<3;j++){
                cout<<dist[i][j]<<" ";
            }
            cout<<endl;
        }
        return 0;
}
